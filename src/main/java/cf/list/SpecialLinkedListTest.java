package cf.list;

/**
 * 链表
 * 链表是在物理存储单元上非连续、非顺序的数据结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的
 * 链表由一系列节点组成，节点可以在运行时动态生成
 * 每个节点包含两个部分：1：存储数据元素的数据域  2：存储下一个节点地址的指针域
 * @author chengfan
 * @date 2019-11-14 09:53:10
 */
public class SpecialLinkedListTest {

    /**
     * 数组和链表的区别
     * 1：数组在内存中连续，利用下标定位，随机访问效率高，增删效率低（需要移动数据）
     * 2：链表插入和删除效率高（next指针指向下一个节点，可以通过改变指针指向进行增删），查找效率低，必须从第一个遍历
     * 3：数组大小固定（需要预先定好，大小不合理会浪费内存），链表大小动态（内存利用率高）
     */

    /**
     * 单向链表和双向链表的区别
     * 1：单向链表只有一个指向下一个节点的指针，也就是只有next
     * 2：双向链表除了指向下一个节点（后继）的指针，还有指向上一个节点（前驱）的指针，可以prev()快速查找上一个节点
     * 也就是单向链表只能单向读取，双向链表可以双向进行，查找效率高一倍
     * 双向链表多一个指针，需要的空间大
     */


}
